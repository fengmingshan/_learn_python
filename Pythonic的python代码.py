# -*- coding: utf-8 -*-
"""
Created on Wed Mar 28 21:08:04 2018
Pythonic的python代码
@author: Administrator
"""
# =============================================================================
# 读取一个文件的内容
# =============================================================================
with open(r'C:\misc\data.txt') as myfile:
    for line in myfile:
        ...use line here...
# =============================================================================
#  读取一个文件，再写入到另一个
# =============================================================================
with open('data.txt') as source, open('target.txt', 'w') as target:
     target.write(source.read())
# =============================================================================
# 写入到excel 表格
# =============================================================================
with pd.ExcelWriter('output.xlsx') as writer: #不用保存和退出，系统自动会完成
    df1.to_excel(writer,'Sheet1') 

# =============================================================================
# 不要乱用切片参数，当3个切片参数一起用的时候会很头大，尽量不要是用step为负数的切片
# =============================================================================
L = [1, 2, 3, 4, 5, 6, 7, 8, 9]
L[-2::-2]
L[-2:2:-2]
L[-2:2:-1]
# 切片有3个参数，第一个表示start，end，step，step可以是负数，表示倒序切

# =============================================================================
# 交换变量值:python里最简洁的赋值语句
# =============================================================================
a = 1
b = 2
a, b = b, a
a
b
# =============================================================================
# 变量自增
# =============================================================================
a = 1 
a += 1
a
# =============================================================================
# enumerate类:接收一个可迭代对象，返回index和可迭代对象中的元素
# =============================================================================
# 打印列表中的元素和元素的index代码
L = [ i*i for i in range(5) ]
index = 0
for data in L:
    print(index, ':', data)
    index += 1
   
# 这是使用enumerate重写的Pythonic的代码:
L = [ i*i for i in range(5) ]
for index, data in enumerate(L):
    print(index , ':',  data)

# =============================================================================
# reversed
# =============================================================================
# 列表倒序
# 正常写法
L=[1, 2, 3, 4]
for item in L[::-1]: #反序切片
    print(item)
    
# Pythonic的代码:
for item in reversed(L):
    print(item)
# =============================================================================
# 在程序检测到某种错误的时候，打印错误信息，并退出程序。
# =============================================================================
import sys
sys.stderr.write('It failed!\n')
raise SystemExit(1)

# Pythonic的代码:
raise SystemExit('It failed!')

# =============================================================================
#  写一个文件，如果文件已存在则不写
# =============================================================================
import os

if not os.path.exists('somefile'):
    with open('somefile', 'wt') as f:
         f.write('Hello\n')
else:
    print('File already exists!')
    
# Pythonic的代码:
with open('somefile', 'xt') as f:
    f.write('Hello\n')

# =============================================================================
# 连接数据库：生成连接字符串,可以写好后，以后直接修改复制粘贴
# =============================================================================
conn_str = '%(dbn)s://%(user)s:%(pw)s@%(host)s:%(port)s/%(db)s'%{'dbn':'mysql',
             'user':'root','pw':'123456','host':'localhost','port':'3306','db':'test'}

# =============================================================================
# 字典的get可以传递默认值
# =============================================================================
port = kwargs.get('port')
if  port is None:
    port = 3306

# Pythonic的代码:   
port = kwargs.get('port', 3306)    

# =============================================================================
# 获取元素且删除
# =============================================================================
L = [1, 2, 3, 4]
last = L[-1]
L.pop()

# Pythonic的代码: 
L = [1, 2, 3, 4]  
last = L.pop()
L

# =============================================================================
# defaultdict:先判断key是否已经存在，如果不存在，则新建一个list并赋值给key,
# 如果已经存在，则调用list的append方法，将值添加进去。
# =============================================================================
 d = {}
 for key, value in pairs:
     if key not in d:
         d[key] = []
     d[key].append(value)

# Pythonic的代码: 
d = defaultdict(list)
for key, value in pairs:
    d[key].append(value)

